{% assign free_product_gid = product.metafields.custom.free_product %}
{% assign free_product_id = free_product_gid | remove: 'gid://shopify/Product/' | plus: 0 %}

{% if free_product_id > 0 %}
<div class="combo-div">
  <h3>Combo Offer</h3>
  <div class="d-flex" style="position: relative;">
    <div class="col-2">
      {% for p in collections.all.products %}
        {% if p.id == product.id %}
          <img id="cb-img1" src="{{ p.featured_image | img_url: 'medium' }}" alt="{{ p.title }}">
        {% endif %}
      {% endfor %}
    </div>
    <div class="col-10">
      {% for p in collections.all.products %}
        {% if p.id == product.id %}
          <h3>{{ p.title }}</h3>
          <p><span id="cb-price1"> {{ p.price | money }}</span></p>
        {% endif %}
      {% endfor %}
    </div>
    <div class="col-12">
      {% if product.variants.size > 1 %}

<ul style="display:none;">
  {% for variant in product.variants %}
 {% if variant.inventory_quantity > 0 %}
    <li id="{{ variant.id }}">{{ variant.price | money }}</li>
      {% endif %}
     {% endfor %}

        </ul>
        
        <select name="product_variation" id="product-vartion" class="product_variation">
          <option value="">Select a variation</option>
          {% for variant in product.variants %}
            {% if variant.inventory_quantity > 0 %}
              <option value="{{ variant.id }}" id="cb-price1" data-img="{{ variant.featured_image | img_url: 'small' }}"
                data-price="{{ variant.id }}">
                {{ variant.title }} 
              </option>
            {% endif %}
          {% endfor %}
        </select>
      {% else %}
        
 
    <span style='display:none;' id="{{ product.id }}">{{  product.price | money }}</span>
    
        <p id="cb-pdiv"><span id="cb-price1" data-price="{{  product.price | money }}"> {{ product.price | money }}</span></p>
        <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}">
      {% endif %}
    </div>
  </div>

  <div class="plus-div"><span class="plus-combo">+</span></div>

  <div class="d-flex" style="position: relative;">
    <span class="ribbon_container">Free</span>
    <div class="col-2">
      {% for p in collections.all.products %}
        {% if p.id == free_product_id %}
          <img id="cb-img" src="{{ p.featured_image | img_url: 'medium' }}" alt="{{ p.title }}">
        {% endif %}
      {% endfor %}
    </div>
    <div class="col-10">



      
      {% for p in collections.all.products %}
        {% if p.id == free_product_id %}
          <h3>{{ p.title }}</h3>
          <p id="cb-pdiv"><span id="cb-price"> {{ p.price | money }}</span> Free</p>
        {% endif %}
      {% endfor %}
    </div>
    <div class="col-12">
      {% if product.variants.size > 1 %}

        <ul style="display:none;">
  {% for variant in product.variants %}
 {% if variant.inventory_quantity > 0 %}
    <li id="{{ variant.id }}">{{ variant.price | money }}</li>
      {% endif %}
     {% endfor %}

        </ul>
        
        <select name="product_variation" id="free-vartion" class="product_variation">
          <option value="">Select a variation</option>
          {% for variant in product.variants %}
            {% if variant.inventory_quantity > 0 %}
              <option value="{{ variant.id }}" id="cb-price" data-img="{{ variant.featured_image | img_url: 'small' }}"
                data-price="{{ variant.id }}">
                {{ variant.title }}
              </option>
            {% endif %}
          {% endfor %}
        </select>
      {% else %}
            <span style='display:none;' id="{{ product.id }}">{{  product.price | money }}</span>
        <p id="cb-pdiv"><span id="cb-price" data-price="{{  product.price | money }}"> {{ product.price | money }}</span> Free</p>
        <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}">
      {% endif %}
    </div>
  </div>

  <div class="total-div">

    <span>
      <span class="money bacurr-money" id="curreny-sy" style="display:none;">0</span> 
        <span id="under-tp">
            {% for p in collections.all.products %}
              {% if p.id == free_product_id %}
                {% assign total_price = p.price | plus: product.price %}
               {{ total_price | money }} 
              {% endif %}
            {% endfor %}
          </span>
          
      <span id="tprice"> {{ product.price | money }}</span>
    </span>
  </div>
  <div><button id="total_add">Add to Cart</button></div>
</div>
{% endif %}

<style>
.combo-div {
    overflow: hidden;
    border-color: rgba(203, 203, 203, 0.4);
    border-radius: 8px;
    background-color: rgba(255, 255, 255, 0.4);
    padding: 15px;
    border: 1px solid #e5e5e5;
}
#total_add{background: #262626;
color: #fff;
width: 100%;
padding: 10px;
border-radius: 9px;
text-align: center;
font-size: 16px;
margin-top: 10px;}

.total-div {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-radius: var(--rbr__border-border-radius-md);
    background-color: var(--rbr__fill-tertiary);
    padding: 16px;
    margin-top: 20px;
    color: var(--rbr__text-primary);
    font-weight: 500;
    font-size: var(--rbr__body-font-size);
    line-height: var(--rbr__body-line-height);
}

#under-tp{text-decoration: line-through;
    color: #19191980;
    padding-right: 5px;}
    .plus-div{display: flex;
    justify-content: center;}
span.plus-combo {
    background: #262626;
    color: #fff;
    width: 40px;
    height: 42px;
    text-align: center;
    font-size: 25px;
    border-radius: 100%;
    margin-top: -10px;
    z-index: 1;
    /* clip-path: circle(80%); */
    margin-bottom: -10px;
}
.ribbon_container{position: absolute;
    background: #c30000;
    color: #fff;
    top: 13px;
    text-align: center;
    width: 115px;
    height: 28px;
    right: -32px;
    transform: rotate(45deg);}
.d-flex{
overflow:hidden;
border-color: rgba(203, 203, 203, 0.4);
    border-radius: 8px;
    background-color: rgba(255, 255, 255, 0.4);
    padding: 24px;
    border: 1px solid #e5e5e5;}
.product_variation{
width: 100%;
    border: 1px solid;
    color: rgb(0, 0, 0);
    height: 36px;
    border-color: rgb(235, 235, 235);
    border-radius: 6px;
    background-color: rgb(250, 250, 250);
    width: 100%;
    padding: 5px;
}
#cb-img1,#cb-img{
  width: 80px;
    height: 80px;
    border-color: rgba(203, 203, 203, 0.4);
    border-radius: 6px;
    object-fit: cover;
}
.d-flex{
  display: flex;
    gap: 20px;
    flex-wrap: wrap;
}

.col-12{
    width: 100%;
}
.col-10 h3{font-size: 16px;
    font-weight: 400;}
#cb-pdiv{
      font-size: 16px;
}
#cb-price{
text-decoration: line-through;
    color: #19191980;
}

  #free-vartion option {
  color: #000 !important;
}
</style>

<script>
    document.getElementById('total_add').addEventListener('click', function(event) {
    event.preventDefault();
    var productVariationId = document.getElementById('product-vartion').value;
    var freeProductVariationId = document.getElementById('free-vartion').value;
    if (!productVariationId || !freeProductVariationId) {
        alert('Please select both product and free product ');
        return;
    }
    var addToCartButton = document.getElementById('total_add');
    var originalButtonText = addToCartButton.innerHTML;  
    addToCartButton.innerHTML = 'Processing...';

    // Prepare the data for the API call
    var data = {
        items: [
            {
                id: productVariationId,
                quantity: 1
            },
            {
                id: freeProductVariationId,
                quantity: 1
            }
        ]
    };


    var cartUrl = '/cart/add.js';

    fetch(cartUrl, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
    })
    .then(response => response.json())
    .then(data => {
      
        window.location.href = '/cart';
    })
    .catch((error) => {
        console.error('Error:', error);
 
        addToCartButton.innerHTML = originalButtonText;
        alert('There was an error adding the products to the cart.');
    });
});



function updateVariantDetails(variationSelector, priceElementId, imageElementId) {
    document.getElementById(variationSelector).addEventListener('change', function(event) {
      
        var selectedOption = event.target.options[event.target.selectedIndex];

 
        var price = selectedOption.getAttribute('data-price');
      
        var imageUrl = selectedOption.getAttribute('data-img');

      
      var spanP=document.getElementById(price).innerHTML;

     document.getElementById(priceElementId).innerHTML = spanP;


        if (imageUrl && !imageUrl.endsWith('.gif')) {
            document.getElementById(imageElementId).src = imageUrl;
        } else {
            console.log("No image or the image is a .gif");
        }
    });
}


updateVariantDetails('product-vartion', 'cb-price1', 'cb-img1');

updateVariantDetails('free-vartion', 'cb-price', 'cb-img');



function updateTotalPrice() {
  
   var productPrice = document.querySelector('#product-vartion')?.selectedOptions[0]?.getAttribute('data-price');


   productPrice = document.getElementById(productPrice)?.innerHTML || "0";
console.log(productPrice)
    productPrice = parseInt(productPrice.replace(/[^0-9]/g, ""), 10); 

 
    var freeProductPrice = document.querySelector('#free-vartion').selectedOptions[0]?.getAttribute('data-price');

  freeProductPrice = document.getElementById(freeProductPrice)?.innerHTML || "0";
    freeProductPrice = parseInt(freeProductPrice.replace(/[^0-9]/g, ""), 10); // Only numeric values, no decimals

  
    if (isNaN(productPrice)) productPrice = 0;
    if (isNaN(freeProductPrice)) freeProductPrice = 0;

    
    var totalPrice = productPrice + freeProductPrice;
    totalPrice = totalPrice / 100;
    console.log(totalPrice);
    productPrice= productPrice/100;
   var currencyElement = document.querySelector('#curreny-sy');
  var currencyText = currencyElement.innerHTML.trim();
   var cleanedText = currencyText.replace(/[\d.,]+$/, '').trim();
    document.getElementById('under-tp').textContent = cleanedTexttotalPrice.toFixed(2);
    document.getElementById('tprice').textContent = cleanedTextproductPrice.toFixed(2);
}

// Add event listeners to both variation dropdowns
document.getElementById('product-vartion').addEventListener('change', updateTotalPrice);
document.getElementById('free-vartion').addEventListener('change', updateTotalPrice);
</script>